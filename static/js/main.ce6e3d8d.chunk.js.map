{"version":3,"sources":["logo.svg","ProfileCustom.js","CustomCalculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ProfileCustom","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","nama","src","width","Component","CustomCalculator","_this","state","color","img","nilai1","nilai2","operator","hasil","name","e","preventDefault","parseInt","refs","value","setState","_this$state","className","onSubmit","handleSubmit","bind","type","ref","renderHasil","App","menu","src_CustomCalculator","src_ProfileCustom","_this2","id","items","map","index","style","concat","onClick","clicked","key","info","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce6e3d8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\n\r\nclass ProfileCustom extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n   \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h2>{this.props.nama}</h2>\r\n      <img src=\"disney.jpg\" width=\"450px\"></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileCustom;","import React, { Component } from 'react';\r\n\r\nclass CustomCalculator extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        color : 'Merah',\r\n        img: 'Merah.jpg',\r\n        nilai1 : null,\r\n        nilai2: null,\r\n        operator: null,\r\n        hasil: null,\r\n        name: 'Calculator',\r\n      };\r\n  }\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    const nilai1 = parseInt(this.refs.nilai1.value);\r\n    const nilai2 = parseInt(this.refs.nilai2.value);\r\n    const operator = this.refs.operator.value;\r\n    \r\n    var hasil;\r\n    switch(operator){\r\n        case '+': \r\n          hasil = nilai1 + nilai2;\r\n          break;\r\n        case '-':\r\n          hasil = nilai1 - nilai2;\r\n          break;\r\n        case '*':\r\n          hasil = nilai1 * nilai2;\r\n          break;\r\n        case '/':\r\n        hasil = nilai1 / nilai2;\r\n          break;\r\n    }\r\n    this.setState({nilai1, nilai2, operator, hasil});\r\n    \r\n    this.refs.nilai1.value = null;\r\n    this.refs.nilai2.value = null;\r\n}\r\n\r\nrenderHasil(){\r\n    const {nilai1, nilai2, operator, hasil} = this.state;\r\n    if(this.state.hasil){\r\n        return (\r\n          <div>\r\n              <br />\r\n              <p className=\"alert alert-success\">\r\n              {\"Hasilnya adalah \"+hasil}\r\n              </p>\r\n          </div>\t\r\n    );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <span className={\"selected \"+this.state.color}>{this.state.name}</span>\r\n         <br></br>\r\n         <br></br>\r\n       <form onSubmit={this.handleSubmit.bind(this)}>\r\n       <input type=\"number\" ref=\"nilai1\"></input>\r\n             <select ref=\"operator\" className=\"form-control\">\r\n               <option value=\"+\">+</option>\r\n               <option value=\"-\">-</option>\r\n               <option value=\"*\">*</option>\r\n               <option value=\"/\">/</option>\r\n             </select>\r\n       <input type=\"number\" ref=\"nilai2\"></input> =...\r\n       <br></br>\r\n       <br></br>\r\n       <button className=\"btn btn-primary\">Count Me</button>\r\n       </form>\r\n       {this.renderHasil()}\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomCalculator;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Profile from './ProfileCustom.js';\r\nimport logo from './logo.svg';\r\nimport Calculator from './CustomCalculator.js';\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      color : 'Merah',\r\n      img: 'Merah.jpg',\r\n      nilai1 : null,\r\n      nilai2: null,\r\n      operator: null,\r\n      hasil: null,\r\n    };\r\n  }\r\n  \r\n  //Untuk memperbarui state sesuai dengan menu yang dipilih\r\n  clicked(menu){\r\n    this.setState({\r\n      color: menu.color,\r\n      img: menu.img,\r\n      name: menu.name,\r\n    });\r\n  }\r\n  info(name){\r\n    if(name == 'Calculator'){\r\n      //display calculator\r\n      return <Calculator/>;\r\n    }\r\n    else if(name == 'Profile'){\r\n        //display menu profile\r\n        return<Profile nama=\"DianingSPS\" />;\r\n    }\r\n    else{\r\n      //display default\r\n      return(\r\n        <div>\r\n         ini adalah <span className={\"selected \"+this.state.color}>\r\n            {this.state.name}</span><br/><br/>\r\n            <img src={this.state.img} width=\"200\"></img>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n//menusaya(){\r\n//  var gambar;\r\n //   if (this.state.active.toLowerCase() === 'Merah'){\r\n   // gambar = \"Merah\";\r\n   // }\r\n    //else if(this.state.active.toLowerCase() === 'Kuning'){\r\n    //  gambar = \"Kuning\";\r\n  //  }\r\n  //  else if(this.state.active.toLowerCase() === 'Biru'){\r\n  //    gambar = \"Biru\";\r\n  //  }\r\n   // else if(this.state.active.toLowerCase() === 'Hijau'){\r\n    //  gambar = \"Hijau\";\r\n    //}\r\n // return <img src={gambar+\".jpg\"} width=\"200\"></img>\r\n//}\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        {/*\r\n          map akan loop sebanyak menu yang didefinisikan\r\n        */}\r\n        {/*\r\n          kemudian mengembalikan elemen <a/>\r\n        */}\r\n          <nav className=\"nav\">\r\n            {\r\n              this.props.items.map(\r\n                (menu, index)=>{\r\n                  var style = 'menu';\r\n\r\n                  if(this.state.color === menu.color){\r\n                    style = `${style} is-active`;\r\n                  }\r\n\r\n                  return (\r\n                    <a className={style+\" \"+menu.color}\r\n                      onClick={\r\n                        this.clicked.bind(this,menu) \r\n                      }\r\n                      key={\r\n                        index\r\n                      }\r\n                    >\r\n                    {menu.name}\r\n                    </a>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n        </nav>\r\n\r\n         <div className=\"info\">\r\n          {this.info(this.state.name)}\r\n            \r\n           {/*{this.menusaya()}*/} \r\n        </div>\r\n\r\n\r\n          </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst items = [\r\n    {\r\n        name : \"Mulan\",\r\n        color : 'Merah',\r\n        img : 'Merah.jpg',\r\n    },\r\n    {\r\n        name : \"Belle\",\r\n        color : 'Kuning',\r\n        img : 'Kuning.jpg',\r\n    },\r\n    {\r\n        name : \"Cinderella\",\r\n        color : 'Biru',\r\n        img : 'Biru.jpg',\r\n    },\r\n    {\r\n        name : \"Jasmine\",\r\n        color : 'Hijau',\r\n        img : 'Hijau.jpg',\r\n    },\r\n    {\r\n        name : \"Calculator\",\r\n        color : 'Orange',\r\n        img : '',\r\n    },\r\n    {\r\n        name : \"Profile\",\r\n        color : 'Pink',\r\n        img : '',\r\n    }\r\n];\r\n\r\nReactDOM.render(<App items={items}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}